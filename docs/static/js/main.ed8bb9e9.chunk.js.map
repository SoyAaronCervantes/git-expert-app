{"version":3,"sources":["components/AddCategory.tsx","services/api/ServiceApiGifs.ts","components/GifGridItem.tsx","components/GifGrid.tsx","hooks/useFetchGifs.ts","GifExpertApp.tsx","index.tsx"],"names":["AddCategoryComponent","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","map","id","title","images","downsized_medium","GifGridItem","item","className","src","alt","GifGridComponent","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","AddCategory","GifGrid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAmCeA,EA/Bc,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,cAA4C,EAEtCC,mBAAS,IAF6B,mBAEnEC,EAFmE,KAEvDC,EAFuD,KAgB1E,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAeQ,S,uBCNNG,EAAO,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAWH,GAD7C,+DAEEI,MAAOF,GAFT,cAEfG,EAFe,gBAGyBA,EAASC,OAHlC,uBAGbC,EAHa,EAGbA,KAHa,kBAIdA,EAAKC,KAAK,SAAAZ,GACf,MAAO,CAAEa,GAAIb,EAAMa,GAAIC,MAAOd,EAAMc,MAAOR,IAAKN,EAAMe,OAAOC,iBAAiBV,SAL3D,2CAAH,sDCcLW,EAbK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KACrB,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAMF,EAAKZ,IAAMe,IAAMH,EAAKJ,QACjC,4BAAKI,EAAKJ,YCsBDQ,EAzBU,SAAC,GAAwC,IAAtClB,EAAqC,EAArCA,SAAqC,ECIrC,SAAEA,GAAuB,IAAD,EAExBd,mBAAqB,CAC7CqB,KAAM,GACNY,SAAS,IAJuC,mBAE3CC,EAF2C,KAEpCC,EAFoC,KAgBlD,OATAC,qBAAW,WACTvB,EAASC,GAAWuB,MAAM,SAAAZ,GACxBU,EAAS,CACPd,KAAK,YAAMI,GACXQ,SAAS,SAGZ,CAAEnB,IAEEoB,EDlB0BI,CAAcxB,GAAlCW,EAFkD,EAEvDJ,KAAaY,EAF0C,EAE1CA,QAErB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAwDf,IACtDmB,GAAW,mBAAGJ,UAAU,wCAAb,wBACb,qBAAKA,UAAY,cAAjB,SAEIJ,EAAOH,KAAK,SAAAiB,GAAK,OACf,cAAC,EAAD,CAEEX,KAAOW,GADDA,EAAMhB,aEWXiB,G,MAvBM,WAAO,IAAD,EAEWxC,mBAAS,CAAC,WAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAIzB,OACE,qCACE,8CACA,cAAC0C,EAAD,CAAsB1C,cAAgBA,IACtC,uBACA,6BAEIS,EAAWc,KAAK,SAAAR,GAAQ,OACtB,cAAC4B,EAAD,CAEE5B,SAAWA,GADLA,aCbpB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ed8bb9e9.chunk.js","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {StateAction} from \"../interfaces/StateAction\";\n\nconst AddCategoryComponent = ({ setCategories }: StateAction<string[]> ) => {\n  \n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement> ) => {\n    const value = e.target.value\n    setInputValue( value );\n  }\n  \n  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if ( inputValue.trim().length > 2 ) {\n      setCategories( categories => [ inputValue, ...categories ] )\n      setInputValue('');\n    }\n  };\n  \n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={ handleInputChange }\n      />\n    </form>\n  );\n};\n\nAddCategoryComponent.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategoryComponent;\n","import {GiphyData} from \"../../interfaces/GiphyData\";\nimport {GifsData} from \"../../interfaces/GifData\";\n\nexport const getGifs = async ( category: string ): Promise<GifsData[]> => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=wYTwv66EMR774GzUb3zqUnzXQnPTr3MR`;\n  const response = await fetch( url );\n  const { data }: { data: GiphyData[] } = await response.json();\n  return data.map( value => {\n    return { id: value.id, title: value.title, url: value.images.downsized_medium.url };\n  });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {GifsData} from \"../interfaces/GifData\";\n\nconst GifGridItem = ({ item }: { item: GifsData }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={ item.url } alt={ item.title }  />\n      <p>{ item.title }</p>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGridComponent = ({ category }: { category: string }) => {\n  \n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInLeft\">{ category }</h3>\n      { loading && <p className=\"animate__animated animate__fadeInLeft\">Loading...</p> }\n      <div className={ \"grid--cards\" }>\n        {\n          images.map( image => (\n            <GifGridItem\n              key={ image.id }\n              item={ image } />\n          ))\n        }\n      </div>\n    </>\n  );\n};\n\nGifGridComponent.propTypes = {\n  category: PropTypes.string.isRequired\n};\n\nexport default GifGridComponent;\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../services/api/ServiceApiGifs\";\nimport {GifsData} from \"../interfaces/GifData\";\n\ninterface FetchState {\n  data: GifsData[];\n  loading: boolean\n}\n\nexport const useFetchGifs = ( category: string ) => {\n  \n  const [state, setState] = useState<FetchState>({\n    data: [],\n    loading: true\n  });\n  \n  useEffect( () => {\n    getGifs( category ).then( images => {\n      setState({\n        data: [ ...images ],\n        loading: false\n      })\n    });\n  }, [ category ])\n  \n  return state;\n}","import React, {useState} from 'react';\nimport AddCategoryComponent from \"./components/AddCategory\";\nimport GifGridComponent from \"./components/GifGrid\";\nimport 'animate.css';\n\nconst GifExpertApp = () => {\n  \n  const [categories, setCategories] = useState(['Bleach']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategoryComponent setCategories={ setCategories }/>\n      <hr/>\n      <ol>\n        {\n          categories.map( category => (\n            <GifGridComponent\n              key={ category }\n              category={ category }\n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}